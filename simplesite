#!/bin/bash

simplesite_conf="simplesite.conf"
rst2html_template="template/rst2html_template.rst"
header_template="template/header.html"
footer_template="template/footer.html"
include_dir="include"
source_dir="source"
site_dir="site"
template_dir="template"
deploy_script="deployment"


function error() {
  echo "Error: $1" >&2
  exit 1 
}

function usage() {
  echo -e "Usage: simplesite [--init]\n\nCommand must be run from the same directory as '$simplesite_conf'" >&2
  exit 1 
}


function print_header() {
  title="$1"
  sed "s/##TITLE##/$title_prefix$title$title_suffix/" "$header_template"
}


function makesitemap() {
  if [ "$base_url" = "" ]; then
    echo 'Warning: No base_url setting in simplesite.conf, skipping sitemap generation'
  else
    {
      for file in $(ls "$source_dir/"*.rst); do
        rest_file="${file##*/}"
        html_file="${rest_file%.rst}.html"
        html_file="${html_file#*_}"
        echo "$base_url/$html_file"
      done
    } > "$site_dir/sitemap.txt"
  fi
}


function makehtml() {
  pages=()
  menu=""

  # If any template files are newer than source files then need to
  # delete entire site and rebuild
  for file in $(ls "$source_dir/"*.rst); do
    rest_file="${file##*/}"
    html_file="${rest_file%.rst}.html"
    html_file="${html_file#*_}"
    if [ "$header_template" -nt "$site_dir/$html_file" ] || [ "$footer_template" -nt "$site_dir/$html_file" ]; then
      rm -Rf "$site_dir/"*
      break
    fi
  done

  # Make list of files, their titles and urls
  for file in $(ls "$source_dir/"*.rst); do
    rest_file="${file##*/}"
    html_file="${rest_file%.rst}.html"
    html_file="${html_file#*_}"

    if [ "$html_file" = "index.html" ]; then
      title="$frontpage_title"
    else
      title="${html_file%.html}"
      title="${title//-/ }"
      title="${title^}"
    fi

    pages+=("$rest_file;$html_file;$title")

    if [ "$html_file" != 'index.html' ]; then
      menu="$menu<li><a href=\"$html_file\">$title</a></li>"
    fi
  done

  if [ "$menu" != "" ]; then
    menu="<ul id=\"menu\">$menu</ul>"
  fi

  for page_info in "${pages[@]}"; do
    read rest_file html_file title <<<$(IFS=";"; echo $page_info)

    # Build page if it has not been built before, the source file is newer than
    # the target file or the template files are newer than the target file
    if ! [ -f "$site_dir/$html_file" ] || [ "$source_dir/$rest_file" -nt "$site_dir/$html_file" ] || [ "$header_template" -nt "$site_dir/$html_file" ] || [ "$footer_template" -nt "$site_dir/$html_file" ]; then
      #echo "Building $site_dir/$html_file.."
      print_header "$title" > "$site_dir/$html_file"
      echo "<h1 class=\"title\">$title</h1>" >> "$PWD/$site_dir/$html_file"
      rst2html "--template=$rst2html_template" "$PWD/$source_dir/$rest_file" >> "$PWD/$site_dir/$html_file"
      echo "$menu" >> "$PWD/$site_dir/$html_file"
      cat "$footer_template" >> "$site_dir/$html_file"
    #else
    #  echo "Skipping $site_dir/$html_file"
    fi

  done
}


function init_dir() {
  if [ -f "$simplesite_conf" ]; then
    error "Existing site found, directory already inititialized, quitting" 
  fi

  mkdir "$site_dir" "$source_dir" "$include_dir" "$template_dir"
  echo -e "title_prefix=''
title_suffix=' - simplesite'
frontpage_title='Welcome to simplesite'" > "$simplesite_conf"
  echo '<html><head><title>##TITLE##</title><meta name="generator" content="simplesite"></head><body>' > "$header_template"
  echo '</body></html>' > "$footer_template"
  echo '%(body)s' > "$rst2html_template"
  echo "Please see simplesite README for instructions!" > "$source_dir/index.rst"
  exit 0
}

# Finds *.dot files in the include directory and converts them to PNG's
function makedotgraphs() {
  include_dir="$1"

  # Check dot exists
  command -v dot >/dev/null 2>&1 || error 'Graphviz dot command not found, quiting'

  for dot_graph in $(find "$include_dir" -name '*.dot'); do
    image_graph="${dot_graph%.dot}.png"
echo "Converting '$dot_graph' to '$image_graph'.."
    dot -Tpng "$dot_graph" -o "$image_graph" || error "Unable to convert '$dot_graph' to png"
    rm "$dot_graph"
  done
}


# This is where the magic starts:)

if [ "$1" == "--init" ]; then
  init_dir
elif [ $# -gt 0 ]; then
  usage
fi

# If simplesite.conf does not exist we are in wrong dir, exit
if [ -f "$simplesite_conf" ]; then
  . "$simplesite_conf"
else
  error "Unable to find '$(pwd)/$simplesite_conf', quitting. Please run 'simplesite --init' to setup new site"
fi

if ! [ -e "$site_dir" ]; then
  mkdir "$site_dir" || error "Unable to create '$site_dir'"
fi

# Check rst2html exists
command -v rst2html >/dev/null 2>&1 || error 'Python docutils rst2html command not found, quiting' 

makehtml
makesitemap

# Copy include directories
if [ -d "$PWD/$include_dir" ]; then # Check exists
  if ! [ -z "$(ls $PWD/$include_dir)" ]; then # Check if empty
    cp -R "$PWD/$include_dir/"* "$PWD/$site_dir/."
  fi
fi

# If enabled in config file, convert all *.dot files in include directory
# to png
if [ "$convert_dot_to_png" = "yes" ]; then
  makedotgraphs "$PWD/$site_dir"
fi

# If deploy script exists and is executable, then run it
if [ -e "$deploy_script" ]; then
  "./$deploy_script"
fi
